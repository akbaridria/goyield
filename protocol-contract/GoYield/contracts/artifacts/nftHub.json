{
  "hints": {
    "createApplication(uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "depositToFolk(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setClaimedDefault()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setwinAmount(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "checkWinner(uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "balance": {
          "type": "uint64",
          "key": "balance"
        },
        "nftAppId": {
          "type": "uint64",
          "key": "nftAppId"
        },
        "vrfAppId": {
          "type": "uint64",
          "key": "vrfAppId"
        },
        "claimed": {
          "type": "bytes",
          "key": "claimed"
        },
        "winAmount": {
          "type": "uint64",
          "key": "winAmount"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "nftHub",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "nftAppId",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "vrfAppId",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "depositToFolk",
        "args": [
          {
            "name": "value",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setClaimedDefault",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setwinAmount",
        "args": [
          {
            "name": "value",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "checkWinner",
        "args": [
          {
            "name": "tokenId",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "value",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      }
    ]
  }
}